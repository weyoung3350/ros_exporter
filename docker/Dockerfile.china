# ROS Exporter Docker构建文件 - 国内镜像源版本
# 支持Apple芯片(arm64)和x86_64架构

# 第一阶段：构建阶段
FROM --platform=$BUILDPLATFORM docker.xuanyuan.me/library/golang:1.21-alpine AS builder

# 设置工作目录
WORKDIR /app

# 安装构建依赖
RUN apk add --no-cache gcc musl-dev

# 复制go模块文件
COPY go.mod go.sum ./

# 下载依赖
RUN go mod download

# 复制源代码
COPY . .

# 构建应用程序（禁用CGO以确保跨平台兼容性）
ARG TARGETOS TARGETARCH
RUN CGO_ENABLED=0 GOOS=$TARGETOS GOARCH=$TARGETARCH go build -ldflags="-w -s" -o ros_exporter .

# 第二阶段：运行阶段
FROM --platform=$TARGETPLATFORM docker.xuanyuan.me/library/alpine:3.18

# 安装运行时依赖
RUN apk add --no-cache ca-certificates tzdata

# 设置时区为上海
RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

# 创建非root用户
RUN addgroup -g 1001 -S exporter && \
    adduser -u 1001 -S exporter -G exporter

# 设置工作目录
WORKDIR /app

# 从构建阶段复制二进制文件
COPY --from=builder /app/ros_exporter .

# 复制配置文件
COPY --chown=exporter:exporter docker/config.yaml ./config.yaml

# 切换到非root用户
USER exporter

# 暴露端口
EXPOSE 9100

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:9100/health || exit 1

# 启动命令
CMD ["./ros_exporter", "-config", "config.yaml"] 